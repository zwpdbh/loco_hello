[workspace]
members = ["frontend", "frontend"]

[package]
name = "loco_hello"
version = "0.1.0"
edition = "2021"
publish = false
default-run = "loco_hello-cli"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[workspace.dependencies]
loco-rs = { version = "0.12.0" }
serde = { version = "1", features = ["derive"] }
serde_json = "1"
chrono = "0.4"
reqwest = { version = "0.12", features = ["json"] }
futures-util = { version = "^0.3" }
tracing = "0.1.40"


[dependencies]
# region:      --- ccommon packages shared in workspace
loco-rs = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
tracing = { workspace = true }
chrono = { workspace = true }
# endregion:   --- ccommon packages shared in workspace


migration = { path = "migration" }
tokio = { version = "1.33.0", default-features = false }
tokio-util = { version = "^0.7", features = ["io"] }
async-trait = "0.1.74"

validator = { version = "0.18" }
sea-orm = { version = "1.1.0", features = [
  "sqlx-sqlite",
  "sqlx-postgres",
  "runtime-tokio-rustls",
  "macros",
] }

axum = { version = "0.7.5", features = ["multipart"] }
include_dir = "0.7"
uuid = { version = "1.6.0", features = ["v4"] }

tracing-subscriber = { version = "0.3.17", features = ["env-filter", "json"] }

# view engine i18n
fluent-templates = { version = "0.8.0", features = ["tera"] }
unic-langid = "0.9.4"
# /view engine

# region:      --- Adding GraphQL Support to Loco with Seaography
seaography = { version = "1.0.0-rc.4", features = [
  "with-decimal",
  "with-chrono",
] }
async-graphql = { version = "7.0", features = [
  "decimal",
  "chrono",
  "dataloader",
  "dynamic-schema",
] }
async-graphql-axum = { version = "7.0" }
lazy_static = { version = "1.4" }
tower-service = { version = "0.3" }
# endregion:   --- Adding GraphQL Support to Loco with Seaography

[[bin]]
name = "loco_hello-cli"
path = "src/bin/main.rs"
required-features = []

[[bin]]
name = "tool"
path = "src/bin/tool.rs"
required-features = []

[dev-dependencies]
serial_test = "3.1.1"
rstest = "0.21.0"
loco-rs = { workspace = true, features = ["testing"] }
insta = { version = "1.34.0", features = ["redactions", "yaml", "filters"] }
# -- my quick dev 
anyhow = "^1"
httpc-test = { version = "^0.1" }
reqwest = { version = "^0.12", features = ["multipart", "stream"] }

[profile]

[profile.wasm-dev]
inherits = "dev"
opt-level = 1

[profile.server-dev]
inherits = "dev"

[profile.android-dev]
inherits = "dev"
